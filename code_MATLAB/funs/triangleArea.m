function areas = triangleArea(track)
% Calculates the area of all triangles of a track (where D 3 == time), for
% VW-TS algorithm in Hunnik 2017, Utrecht University
% Input: track w/ x, y, t
% Output: vector of areas of triangles around pts 2:end-1

% Input checks
if ~any("t" == string(track.Properties.VariableNames))
    track.t = ones(size(track.x)); % 2D triangles without time
end

% Make matrix of [p1 p2 p3] for each triplet of the track
pts.x = [track.x(1:end-2) track.x(2:end-1) track.x(3:end)];
pts.y = [track.y(1:end-2) track.y(2:end-1) track.y(3:end)];
pts.t = [track.t(1:end-2) track.t(2:end-1) track.t(3:end)];

% Calculate side lengths
sides(:,1) = sqrt(...
    (pts.x(:,1) - pts.x(:,2)).^2 + ...
    (pts.y(:,1) - pts.y(:,2)).^2 + ...
    (pts.t(:,1) - pts.t(:,2)).^2);

sides(:,2) = sqrt(...
    (pts.x(:,2) - pts.x(:,3)).^2 + ...
    (pts.y(:,2) - pts.y(:,3)).^2 + ...
    (pts.t(:,2) - pts.t(:,3)).^2);

sides(:,3) = sqrt(...
    (pts.x(:,1) - pts.x(:,3)).^2 + ...
    (pts.y(:,1) - pts.y(:,3)).^2 + ...
    (pts.t(:,1) - pts.t(:,3)).^2);

% Sort such that s(:,1)>=s2>=s3
sides = sort(sides,2,'descend');

% Calculate area
areas = sqrt(...
  (sides(:,1)+(sides(:,2)+sides(:,3))).*...
  (sides(:,3)-(sides(:,1)-sides(:,2))).*...
  (sides(:,3)+(sides(:,1)-sides(:,2))).*...
  (sides(:,1)+(sides(:,2)-sides(:,3))))/4;
